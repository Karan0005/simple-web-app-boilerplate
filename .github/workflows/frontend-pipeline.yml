name: Frontend_Pipeline
run-name: Backend Build for ${{ github.ref }} by ${{ github.actor }}

on:
    push:
        branches:
            - develop
            - uat
            - main

        paths:
            - 'apps/frontend/**'
            - 'libs/shared/**'

jobs:
    frontend:
        name: Frontend Build and Deploy
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to DockerHub
              uses: docker/login-action@v3.3.0
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            # - name: Set environment for frontend
            #   id: set-env
            #   run: |
            #       if [[ $GITHUB_REF == refs/heads/develop ]]; then
            #         echo "env=develop" >> $GITHUB_ENV
            #         echo "docker_tag=develop" >> $GITHUB_ENV
            #         echo "render_service_id=${{ secrets.RENDER_FRONTEND_SERVICE_DEV }}" >> $GITHUB_ENV
            #       elif [[ $GITHUB_REF == refs/heads/uat ]]; then
            #         echo "env=uat" >> $GITHUB_ENV
            #         echo "docker_tag=uat" >> $GITHUB_ENV
            #         echo "render_service_id=${{ secrets.RENDER_FRONTEND_SERVICE_UAT }}" >> $GITHUB_ENV
            #       elif [[ $GITHUB_REF == refs/heads/main ]]; then
            #         echo "env=prod" >> $GITHUB_ENV
            #         echo "docker_tag=prod" >> $GITHUB_ENV
            #         echo "render_service_id=${{ secrets.RENDER_FRONTEND_SERVICE_PROD }}" >> $GITHUB_ENV
            #       fi

            # - name: Build Frontend Docker Image
            #   run: |
            #       docker build \
            #         --build-arg APP_ENV=${{ secrets.APP_ENV }} \
            #         --build-arg PORT_FRONTEND=${{ secrets.PORT_FRONTEND }} \
            #         -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.docker_tag }} \
            #         -f devops/frontend/Dockerfile .

            # - name: Push Frontend Image to DockerHub
            #   run: |
            #       docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.docker_tag }}

            # - name: Deploy Frontend to Render
            #   run: |
            #       curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            #       -H "Content-Type: application/json" \
            #       --data '{
            #         "serviceId": "${{ env.render_service_id }}",
            #         "image": "${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.docker_tag }}",
            #         "clearCache": true
            #       }' \
            #       ${{ secrets.RENDER_API_URL }}/v1/services/${{ env.render_service_id }}/deploys
